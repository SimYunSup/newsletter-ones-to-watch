---
import {notionClient} from "../../../lib/data";
import Layout from "@/components/BasicLayout.astro";

const {page} = Astro.params;
if (!Number.isSafeInteger(Number(page))) {
  return Astro.redirect("/404");
}
let currentPage = Number(page);
let nextCursor: string | undefined;
let result = {};
while (currentPage >= 1) {
  const response = await notionClient.databases.query({
      database_id: import.meta.env.NOTION_DATABASE_ID,
      filter: {
        property: "Status",
        select: {
          equals: "New"
        }
      },
      sorts: [
        {
          property: "날짜",
          direction: "descending"
        }
      ],
      start_cursor: nextCursor,
      page_size: 12,
    },
  );
  result = response;
  nextCursor = response.next_cursor;
  currentPage = currentPage - 1;
}
if (!result.results.length) {
  return Astro.redirect("/404");
}
const hasNextPage = !!(result.next_cursor)
const postData = result.results.map(v => ({
  id: v.id,
  value: {
    date: v.properties.날짜.date.start,
    name: v.properties.이름.title[0].plain_text,
  },
}))
---

<Layout pageTitle={`${page}페이지 | OTW for FE`}>
  <article class="flex">
    <div class="container mx-auto px-4 sm:px-24">
      <ul
        class="flex flex-col lg:flex-row mb-18 flex-wrap gap-x-0 gap-y-4 lg:gap-x-4"
      >
        {
          postData.map((post) => (
            <li class="w-full rounded-md border-4 border-gray-500 overflow-hidden p-3 lg:w-[calc(50%-.5rem)]">
              <a
                class="w-full h-20 lg:h-28 flex overflow-hidden"
                href={`/news/post/${post.id}`}
              >
                <div class="py-3 flex flex-col grow w-32">
                  <div class="text-2xl font-bold mb-auto w-full text-ellipsis overflow-hidden whitespace-nowrap h-8">
                    {post.value.name}
                  </div>
                  <div class="text-md lg:text-lg text-gray-700 w-full">
                    {new Intl.DateTimeFormat("ko-KR").format(
                      new Date(post.value.date)
                    )}
                  </div>
                </div>
              </a>
            </li>
          ))
        }
      </ul>
      <nav class="flex justify-between w-full px-0 sm:px-8 my-8">
        <div>
          {
            Number(page) > 1 ? (
              <a
                class="rounded-xl bg-teal-600 text-white text-3xl p-4"
                href={`/news/list/${(page ? Number(page) : 2) - 1}`}
              >
                이전
              </a>
            ) : null
          }
        </div>
        <div>
          {
            hasNextPage ? (
              <a
                class="rounded-xl bg-teal-600 text-white text-3xl p-4"
                href={`/news/list/${(page ? Number(page) : 0) + 1}`}
              >
                다음
              </a>
            ) : null
          }
        </div>
      </nav>
    </div>
  </article>
</Layout>
