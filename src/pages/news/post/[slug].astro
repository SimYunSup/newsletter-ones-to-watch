---
import 'github-markdown-css/github-markdown-light.css';
import '@/styles/content.css';
import { createBlockRenderer, NotionRenderer } from '@notion-render/client';
import Layout from '@/components/BasicLayout.astro';

const renderer = new NotionRenderer({
	renderers: [
		createBlockRenderer(
			'bookmark',
			async (data) => {
				const bookmarkData = data.bookmark as any;
				const imageBaseURL = import.meta.env.IMAGE_BASE;
				const imageTag = bookmarkData.image ? `<img class="h-full" src="${imageBaseURL}${bookmarkData.image}" alt="">` : ''
				return `
					<a href="${bookmarkData.url}" target="_blank" class="mb-2 w-full border-2 border-gray-500 h-28 flex text-gray-950 overflow-hidden" target="_blank">
						<div class="h-full flex-auto p-3 w-full">
             	<div class="text-2xl font-bold mb-auto w-full text-ellipsis overflow-hidden whitespace-nowrap h-8">
                ${bookmarkData.title ?? bookmarkData.url}
              </div>
              <div class="text-md lg:text-lg text-gray-700 w-full text-ellipsis">
              	${bookmarkData.description ?? ''}
              </div>
						</div>
						${imageTag}
					</a>
				`
			}
		)
	]
});

const { slug } = Astro.params;
if (!slug) {
	return Astro.redirect("/404");
}

const runtime = Astro.locals.runtime;
const { value: response, metadata } = await runtime.env.CRAWLER_KV.getWithMetadata(
	slug,
	'json',
);

if (!response) {
  return Astro.redirect('/404');
}

const html = await renderer.render(...(response as any));

---
<Layout pageTitle={""}>
	<Fragment slot="head">
		<meta name="description" content={`뉴스레터`} />
		<meta property="og:title" content={metadata.title} />
		<meta property="og:type" content="article" />
		<meta property="og:url" content={Astro.url} />
		<meta property="og:image" content="/images/og.png" />
	</Fragment>
	<article
		class="col-span-12 lg:col-span-8 lg:col-start-3 pt-10 px-2 lg:pt-[80px] max-w-3xl mx-auto"
	>
		<h1 class="text-3xl font-semibold mb-8">
			{metadata.title}
		</h1>
		<div class="flex items-center gap-3 mb-2">
			<div>
				<div class="flex items-center text-gray-400 text-sm gap-1">
					<p>{new Intl.DateTimeFormat('ko-KR').format(new Date(metadata.targetDate))}</p>
				</div>
			</div>
		</div>
		<div class="markdown-body pb-12" set:html={html} />
		<script>
			import Twemoji from 'twemoji';
			Twemoji.parse(document.body)
		</script>
		<script src="https://giscus.app/client.js"
				data-repo="SimYunSup/newsletter-ones-to-watch"
				data-repo-id="R_kgDOKO1eRg"
				data-category-id="DIC_kwDOKO1eRs4CZDYo"
				data-mapping="pathname"
				data-strict="0"
				data-reactions-enabled="1"
				data-emit-metadata="0"
				data-input-position="bottom"
				data-theme="light"
				data-lang="ko"
				data-loading="lazy"
				crossorigin="anonymous"
				async>
		</script>
	</article>
</Layout>
